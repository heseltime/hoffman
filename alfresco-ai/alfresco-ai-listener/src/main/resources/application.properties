# Spring Boot properties
spring.main.banner-mode=off
logging.level.org.springframework=ERROR
logging.level.org.alfresco=INFO
logging.pattern.console=%msg%n

# Alfresco Server Configuration
# Basic authentication credentials for Alfresco Server
content.service.security.basicAuth.username=admin
content.service.security.basicAuth.password=admin
# URL and path for Alfresco Server API
content.service.url=http://localhost:8080
content.service.path=/alfresco/api/-default-/public/alfresco/versions/1


# Alfresco Repository Content Model (Summary)
# Aspect that triggers the summarization task
content.service.summary.aspect=genai:summarizable
# Node property to store the summary obtained from GenAI Stack
content.service.summary.summary.property=genai:summary
# Node property to store tags obtained from GenAI Stack; use TAG as a value to use a tag instead of a property
content.service.summary.tags.property=genai:tags
# Node property to store the Large Language Model (LLM) used; use TAG as a value to use a tag instead of a property
content.service.summary.model.property=genai:llmSummary

# Alfresco Repository Content Model (Prompt)
# Aspect that enables prompt task
content.service.prompt.aspect=genai:promptable
# Node property that contains a question
content.service.prompt.question.property=genai:question
# Node property to fill with the answer
content.service.prompt.answer.property=genai:answer
# Node property to fill with the model
content.service.prompt.model.property=genai:llmPrompt

# Alfresco Repository Content Model (Classify)
# Node property that includes terms for classification
content.service.classify.terms.property=genai:terms
# Aspect that enables classification task
content.service.classify.aspect=genai:classified
# Node property to fill with the term
content.service.classify.term.property=genai:term
# Node property to fill with the model
content.service.classify.model.property=genai:llmClassify

# Alfresco Repository Content Model (Description)
# Aspect that triggers the description task
content.service.description.aspect=genai:descriptable
# Node property to store the description obtained from GenAI Stack
content.service.description.description.property=genai:description
# Node property to store the Large Language Model (LLM) used; use TAG as a value to use a tag instead of a property
content.service.description.model.property=genai:llmDescription

# Alfresco Repository Content Model (Accessibility)
# Aspect that triggers the accessibility scoring task
content.service.a11y.aspect=genai:accessibilityCheckable
# Node property to store the accessibility score
content.service.a11y.score.property=genai:accessibilityScore
# Node property to store the accessibility score model
content.service.a11y.score.model.property=genai:accessibilityScoreModel
# Node property to store the accessibility summary description
content.service.a11y.summary.description.property=genai:accessibilitySummaryDescription
# Node property to store the number of checks needing manual review
content.service.a11y.summary.needsManualCheck.property=genai:accessibilitySummaryNeedsManualCheck
# Node property to store the number of checks passed manually
content.service.a11y.summary.passedManually.property=genai:accessibilitySummaryPassedManually
# Node property to store the number of checks failed manually
content.service.a11y.summary.failedManually.property=genai:accessibilitySummaryFailedManually
# Node property to store the number of checks skipped
content.service.a11y.summary.skipped.property=genai:accessibilitySummarySkipped
# Node property to store the number of checks passed
content.service.a11y.summary.passed.property=genai:accessibilitySummaryPassed
# Node property to store the number of checks failed
content.service.a11y.summary.failed.property=genai:accessibilitySummaryFailed
# Node property to store the result of the "Accessibility Permission Flag" rule
content.service.a11y.rule.accessibilityPermissionFlag.property=genai:accessibilityReportRuleAccessibilityPermissionFlag
# Image-only PDF
content.service.a11y.rule.imageOnlyPDF.property=genai:accessibilityReportRuleImageOnlyPDF
# Tagged PDF
content.service.a11y.rule.taggedPDF.property=genai:accessibilityReportRuleTaggedPDF
# Logical Reading Order
content.service.a11y.rule.logicalReadingOrder.property=genai:accessibilityReportRuleLogicalReadingOrder
# Primary Language
content.service.a11y.rule.primaryLanguage.property=genai:accessibilityReportRulePrimaryLanguage
# Title
content.service.a11y.rule.title.property=genai:accessibilityReportRuleTitle
# Bookmarks
content.service.a11y.rule.bookmarks.property=genai:accessibilityReportRuleBookmarks
# Color Contrast
content.service.a11y.rule.colorContrast.property=genai:accessibilityReportRuleColorContrast
# Tagged Content
content.service.a11y.rule.taggedContent.property=genai:accessibilityReportRuleTaggedContent
# Tagged Annotations
content.service.a11y.rule.taggedAnnotations.property=genai:accessibilityReportRuleTaggedAnnotations
# Tab Order
content.service.a11y.rule.tabOrder.property=genai:accessibilityReportRuleTabOrder
# Character Encoding
content.service.a11y.rule.characterEncoding.property=genai:accessibilityReportRuleCharacterEncoding
# Tagged Multimedia
content.service.a11y.rule.taggedMultimedia.property=genai:accessibilityReportRuleTaggedMultimedia
# Screen Flicker
content.service.a11y.rule.screenFlicker.property=genai:accessibilityReportRuleScreenFlicker
# Scripts
content.service.a11y.rule.scripts.property=genai:accessibilityReportRuleScripts
# Timed Responses
content.service.a11y.rule.timedResponses.property=genai:accessibilityReportRuleTimedResponses
# Navigation Links
content.service.a11y.rule.navigationLinks.property=genai:accessibilityReportRuleNavigationLinks
# Tagged Form Fields
content.service.a11y.rule.taggedFormFields.property=genai:accessibilityReportRuleTaggedFormFields
# Field Descriptions
content.service.a11y.rule.fieldDescriptions.property=genai:accessibilityReportRuleFieldDescriptions
# Figures Alternate Text
content.service.a11y.rule.figuresAlternateText.property=genai:accessibilityReportRuleFiguresAlternateText
# Nested Alternate Text
content.service.a11y.rule.nestedAlternateText.property=genai:accessibilityReportRuleNestedAlternateText
# Associated With Content
content.service.a11y.rule.associatedWithContent.property=genai:accessibilityReportRuleAssociatedWithContent
# Hides Annotation
content.service.a11y.rule.hidesAnnotation.property=genai:accessibilityReportRuleHidesAnnotation
# Other Elements Alternate Text
content.service.a11y.rule.otherElementsAlternateText.property=genai:accessibilityReportRuleOtherElementsAlternateText
# Table Rows
content.service.a11y.rule.rows.property=genai:accessibilityReportRuleRows
# TH and TD
content.service.a11y.rule.thAndTd.property=genai:accessibilityReportRuleTHAndTD
# Table Headers
content.service.a11y.rule.headers.property=genai:accessibilityReportRuleHeaders
# Table Regularity
content.service.a11y.rule.regularity.property=genai:accessibilityReportRuleRegularity
# Table Summary
content.service.a11y.rule.summary.property=genai:accessibilityReportRuleSummary
# List Items
content.service.a11y.rule.listItems.property=genai:accessibilityReportRuleListItems
# Lbl and LBody
content.service.a11y.rule.lblAndLBody.property=genai:accessibilityReportRuleLblAndLBody
# Appropriate Nesting
content.service.a11y.rule.appropriateNesting.property=genai:accessibilityReportRuleAppropriateNesting

# Accessibility Hyperparameters: MAX_RETRIES_ACCESSIBILITY_CHECKING_LOOP
accessibility.pipeline.max.checking.retries=2

# ActiveMQ Server
spring.activemq.brokerUrl=tcp://localhost:61616
spring.jms.cache.enabled=false
alfresco.events.enableSpringIntegration=false
alfresco.events.enableHandlers=true

# GenAI Client Configuration
# Host URL for the Document GenAI service
genai.url=http://localhost:8506
# Request timeout in seconds for GenAI service requests
genai.request.timeout=1200